(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{78:function(r,e,n){"use strict";n.r(e);var t=n(0),v=Object(t.a)({},(function(){var r=this,e=r.$createElement,n=r._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[n("h1",{attrs:{id:"操作命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作命令"}},[r._v("#")]),r._v(" 操作命令")]),r._v(" "),n("h2",{attrs:{id:"_1、基本的-linux-操作命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本的-linux-操作命令"}},[r._v("#")]),r._v(" 1、基本的 linux 操作命令")]),r._v(" "),n("p",[n("strong",[r._v("1、目录查看命令")]),n("br"),r._v("\nls --- 查看当前的目录下文件"),n("br"),r._v("\nls -al --- 查看当前的目录下文件包括隐藏文件")]),r._v(" "),n("p",[n("strong",[r._v("2、 目录切换命令")]),n("br"),r._v("\ncd 目录名 --- 切换目录")]),r._v(" "),n("blockquote",[n("p",[r._v("常用："),n("br"),r._v("\ncd   ~        当前用户主目录"),n("br"),r._v("\ncd   /        根目录"),n("br"),r._v("\ncd   -        上一次访问的目录"),n("br"),r._v("\ncd   ..        上一级目录"),n("br"),r._v("\ncd            当前用户主目录")])]),r._v(" "),n("p",[r._v("touch 1.txt --- 在当前目录创建一个文件 1.txt"),n("br"),r._v("\nclear ---清除屏幕")]),r._v(" "),n("p",[n("strong",[r._v("3、目录创建命令")]),n("br"),r._v("\npwd --- 显示当前工作目录"),n("br"),r._v("\nmkdir 名称 --- 创建目录文件")]),r._v(" "),n("p",[n("strong",[r._v("4、文件操作命令")]),n("br"),r._v("\ncp [源文件或目录][目标文件或目录] ---复制文件或目录")]),r._v(" "),n("blockquote",[n("p",[r._v("cp   1.txt   2.txt"),n("br"),r._v("\ncp -b  1.txt  2.txt  ：如果覆盖文件时,可以将源文件做一个备份"),n("br"),r._v("\ncp  ./1.txt   ../   ：将当前目录下的 1.txt 复制到父级目录"),n("br"),r._v("\ncp  /root/1.txt   /bin/2.txt   ：将/root 下的 1.txt 文件复制到根目录下的 bin 目录下的 2.txt 中"),n("br"),r._v("\n复制目录：(无论是单层目录还是多层目录都可以复制):"),n("br"),r._v("\ncp  -r  ./a  ./b"),n("br"),r._v("\ncp  -r  /root/a  /root/z")])]),r._v(" "),n("p",[r._v("mv [源文件或目录][目标文件或目录] ---移动或更名现有的文件或目录"),n("br"),r._v("\nrm [文件或目录...] --- 删除文件或目录")]),r._v(" "),n("blockquote",[n("p",[r._v("-f 或 --force 强制删除文件或目录"),n("br"),r._v("\n-r 或 -R 或 --recursive 递归处理，将指定目录下的所有文件及子目录一并处理"),n("br"),r._v("\n强制删除文件：rm -f ./1.txt"),n("br"),r._v("\n强制删除目录：rm -rf ./a")])]),r._v(" "),n("p",[r._v("find [目录...][参数] --- 查找文件或目录")]),r._v(" "),n("blockquote",[n("p",[r._v("-name 指定字符串作为寻找文件或目录的范本样式"),n("br"),r._v("\nfind /root/ -name 'test*' 查找 root 目录下的文件开头是 test 的文件和文件夹，*是通配符 。注意字符串要用单引号引起来。")])]),r._v(" "),n("p",[n("strong",[r._v("5、系统操作命令")])]),r._v(" "),n("p",[r._v("ps -ef --- 查看当前所有进程"),n("br"),r._v("\nkill pid(进程 id) --- 删除执行中的程序或工作"),n("br"),r._v("\nkill -9 --- 表示强制终止"),n("br"),r._v("\nifconfig --- 查看当前主机 ip"),n("br"),r._v("\nping ip 地址 --- 测试网络连通性"),n("br"),r._v("\nping 　-c --- 要 ping 的次数\nsudo --- 管理权限\n"),n("strong",[r._v("Linux centos 重启命令：reboot")]),n("br"),r._v(" "),n("strong",[r._v("Linux centos 关机命令：halt")])]),r._v(" "),n("h2",{attrs:{id:"_2、docker-部署前端项目流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、docker-部署前端项目流程"}},[r._v("#")]),r._v(" 2、Docker 部署前端项目流程")]),r._v(" "),n("h3",{attrs:{id:"_1、基本的-docker-操作命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本的-docker-操作命令"}},[r._v("#")]),r._v(" 1、基本的 docker 操作命令")]),r._v(" "),n("p",[r._v("docker images --- 查看所以镜像")]),r._v(" "),n("p",[r._v("docker search 镜像名 --- 搜索相关镜像")]),r._v(" "),n("p",[r._v("docker images | grep 镜像名模糊搜索")]),r._v(" "),n("p",[r._v("docker pull（-a） 镜像名:版本号 --- 　拉取镜像,-a pull all")]),r._v(" "),n("p",[r._v("docker push 192.168.0.100:5000/ubuntu 　---　 推送镜像库到私有源")]),r._v(" "),n("p",[r._v("docker rmi（-f） 镜像名：版本号/镜像 ID --- 　　删除镜像 （加上 -f 参数 强制删除）")]),r._v(" "),n("p",[r._v("docker rmi $(docker images -q)　---　删除所有镜像")]),r._v(" "),n("p",[r._v("docker ps --- 查看所以的容器")]),r._v(" "),n("p",[r._v("docker ps -a --- 查看所有容器的状态")]),r._v(" "),n("p",[r._v("docker exec -it 容器 name /bin/sh --- 进入容器")]),r._v(" "),n("p",[r._v("exit --- 退出容器")]),r._v(" "),n("p",[r._v("docker start/stop id/name[name...] --- 启动/停止某个（多个）容器")]),r._v(" "),n("p",[r._v("docker kill name[name...] --- 强制中断")]),r._v(" "),n("p",[r._v("docker restart name[name...] --- 重启")]),r._v(" "),n("p",[r._v("docker pause name 　--- 暂停")]),r._v(" "),n("p",[r._v("docker unpause name --- 继续")]),r._v(" "),n("p",[r._v("docker rm name[name...] --- 移除容器")]),r._v(" "),n("p",[r._v("docker rmi （-f） name[name...] --- 移除镜像(-f:强制移除运行中容器)")]),r._v(" "),n("p",[n("strong",[r._v("一键删除所有 tag 为 none 的镜像")])]),r._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[r._v("docker rmi `docker images | grep  \"<none>\" | awk '{print $3}'`\n")])])]),n("blockquote",[n("p",[r._v("https://www.runoob.com/docker/docker-command-manual.html 更详细的命令操作请查看")])]),r._v(" "),n("h3",{attrs:{id:"_2、上传本地镜像到远程镜像仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、上传本地镜像到远程镜像仓库"}},[r._v("#")]),r._v(" 2、上传本地镜像到远程镜像仓库")]),r._v(" "),n("p",[r._v("第一步：连接远程镜像仓库 （docker login ip 地址:端口号）\n第二步：获取远程仓库中的镜像 （docker push 镜像名）"),n("br"),r._v("\n第三步：获取仓库中所有镜像 （docker images ）"),n("br"),r._v("\n第四步：编写自己的 dockerfile 文件"),n("br"),r._v("\n第五步：build 当前镜像中的 dockerfile 文件，生成新的 dockerfile 文件。 （docker build -t 镜像名：tag . ）"),n("br"),r._v("\n第六步：本地测试是否 build 成功 【本步骤可省略】， （docker run -p 8081:80 -d --name 容器名 镜像名：tag）")]),r._v(" "),n("blockquote",[n("p",[r._v("-p, --publish=[]， 指定容器暴露的端口"),n("br"),r._v("\n-d, --detach=false， 指定容器运行于前台还是后台，默认为 false"),n("br"),r._v('\n--name=""， 指定容器名字，后续可以通过名字进行容器管理，links 特性需要使用名字')])]),r._v(" "),n("p",[r._v("第七步：查看当前运行的容器 （docker ps ）"),n("br"),r._v("\n第八步：测试成功后上传镜像， （docker push 镜像名：tag）"),n("br"),r._v("\n第九步：查看仓库中的所有镜像 （docker images）")]),r._v(" "),n("h3",{attrs:{id:"_3、本地镜像上传到服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、本地镜像上传到服务器"}},[r._v("#")]),r._v(" 3、本地镜像上传到服务器")]),r._v(" "),n("p",[r._v("本地环境")]),r._v(" "),n("ol",[n("li",[r._v("docker images 查看本地 docker 镜像")]),r._v(" "),n("li",[r._v("找个路径 cd Downloads/ -> docker save -o nr.tar(名字.tar 包) 10.1.32.209:9081/dist/nr-web-app:v1024(镜像:tag)")]),r._v(" "),n("li",[r._v("scp nr.tar root@10.1.32.194:/root")]),r._v(" "),n("li",[r._v("登录 ssh root@10.1.32.194"),n("br"),r._v("\ndist@2020")]),r._v(" "),n("li",[r._v("上传 docker load -i nr.tar(名字.tar 包)")]),r._v(" "),n("li",[r._v("查看 docker 服务 docker service ls")]),r._v(" "),n("li",[r._v("更新某个服务下的镜像 docker service update front_nr-frontend --image 10.1.32.209:9081/dist/nr-web-app:v1024")])]),r._v(" "),n("p",[r._v("最后终端出现")]),r._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[r._v("[root@master ~]# docker service update front_nr-frontend --image 10.1.32.209:9081/dist/nr-web-app:v1024\nimage 10.1.32.209:9081/dist/nr-web-app:v1024 could not be accessed on a registry to record\nits digest. Each node will access 10.1.32.209:9081/dist/nr-web-app:v1024 independently,\npossibly leading to different nodes running different\nversions of the image.\n\nfront_nr-frontend\noverall progress: 2 out of 2 tasks\n1/2: running [==================================================>]\n2/2: running [==================================================>]\nverify: Service converged\n")])])]),n("h3",{attrs:{id:"_4、公司上传到harbor仓库流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、公司上传到harbor仓库流程"}},[r._v("#")]),r._v(" 4、公司上传到harbor仓库流程")]),r._v(" "),n("p",[r._v("1、docker pull 镜像名:tag标签 （创建一个新的镜像）")]),r._v(" "),n("p",[r._v("2、docker run -it 161.189.83.164/bip1.0_sh2019gh169/bip  /bin/bash  （以建立的镜像创建一个新的容器）")]),r._v(" "),n("p",[r._v("3、docker build -t 161.189.83.164/bip1.0_sh2019gh169/bip-main:latest . （启动镜像打包）")]),r._v(" "),n("p",[r._v("4、docker run -p 8081:80 -d --name bip 161.189.83.164/bip1.0_sh2019gh169/bip-main:latest （运行镜像生成容器）")]),r._v(" "),n("p",[r._v("5、docker save -o bip-main.tar 161.189.83.164/bip1.0_sh2019gh169/bip-main:latest （创建tar包）")]),r._v(" "),n("p",[r._v("6、docker push 161.189.83.164/bip1.0_sh2019gh169/bip-main:latest （上传镜像到仓库）")]),r._v(" "),n("h2",{attrs:{id:"_3、nginx-基本操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、nginx-基本操作"}},[r._v("#")]),r._v(" 3、Nginx 基本操作")]),r._v(" "),n("ol",[n("li",[n("p",[r._v("启动：brew services restart nginx")])]),r._v(" "),n("li",[n("p",[r._v("查看是否监听端口：netstat -an | grep 端口号")])]),r._v(" "),n("li",[n("p",[r._v("查看配置文件：vi nginx.conf")])]),r._v(" "),n("li",[n("p",[r._v("查看 nginx 文件地址：which nginx")])]),r._v(" "),n("li",[n("p",[r._v("查找配置文件地址：open .")])]),r._v(" "),n("li",[n("p",[r._v("查看目前执行的服务：brew services list")])]),r._v(" "),n("li",[n("p",[r._v("停止 nginx 服务：brew services stop nginx")])]),r._v(" "),n("li",[n("p",[r._v("查看 nginx 配置是否生效：nginx -t")])]),r._v(" "),n("li",[n("p",[r._v("查看 nginx 所有的配置:nginx -T")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);