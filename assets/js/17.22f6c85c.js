(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{66:function(t,e,a){"use strict";a.r(e);var n=a(0),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"辅助审查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#辅助审查"}},[t._v("#")]),t._v(" 辅助审查")]),t._v(" "),a("h2",{attrs:{id:"一、整体结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、整体结构"}},[t._v("#")]),t._v(" 一、整体结构")]),t._v(" "),a("h3",{attrs:{id:"_1、路由结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、路由结构"}},[t._v("#")]),t._v(" 1、路由结构")]),t._v(" "),a("p",[t._v("src/router/routes/fzsc.js")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/jbly.png"),alt:"foo"}}),t._v(" "),a("p",[t._v("上图属于辅助审查的基本路由结构，我们在页面上看到的 tab 切换都是采用路由控制的。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/ymly.png"),alt:"foo"}}),t._v(" "),a("h3",{attrs:{id:"_2、成果审查（resultreview）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、成果审查（resultreview）"}},[t._v("#")]),t._v(" 2、成果审查（ResultReview）")]),t._v(" "),a("h5",{attrs:{id:"组件部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件部分"}},[t._v("#")]),t._v(" 组件部分")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/bql.png"),alt:"foo"}}),t._v(" "),a("h4",{attrs:{id:"新建任务（bpresumeuploadfile）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建任务（bpresumeuploadfile）"}},[t._v("#")]),t._v(" 新建任务（BPResumeUploadFile）")]),t._v(" "),a("p",[t._v("分段上传")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  async handleZipInfoAfterMergeAction(param) {\n      // 解析成果包\n      try {\n        let data = await this.analyzeFileChunk(param);\n        // 更新界面内容\n        if (data) {\n          this.showTableSpin = false;\n          this.handleAnalyzeFileSuccess(data, this.file);\n        }\n      } catch (error) {\n        this.showTableSpin = false;\n        this.$Message.error({\n          content: error,\n          duration: 5,\n          closable: true\n        });\n      }\n    },\n    // 检查服务器是否已经有文件\n    async checkFileInServe(md5) {\n      try {\n        let data = await this.checkUploadChunk({ fileMd5: md5 });\n        if (data) {\n          // 验证当前文件md5值是否存在已上传的记录或片段,并获取已上传片段标识\n          // 此处验证已上传文件一般是验证文件已上传大小和片段标识(一般为编号)\n          this.uploadFileBySplitToggle(md5, data);\n        }\n      } catch (error) {\n        this.showTableSpin = false;\n      }\n    },\n    // 并发上传文件, 后端处理排序\n    uploadFileBySplitToggle(md5, uploadedFileNum) {\n      let vm = this;\n      this.uploadCount = uploadedFileNum.length;\n      let chunks = this.chunks;\n      let currentFile = this.file;\n      let currentChunk = 0; // 记录当前所在片段标记\n      if (vm.uploadCount === chunks || vm.uploadCount > chunks) {\n        vm.getUploadedFileInfo(chunks, md5);\n        return;\n      }\n\n      async function loadNext() {\n        let start = currentChunk * chunkSize,\n          end =\n            start + chunkSize >= currentFile.size\n              ? currentFile.size\n              : start + chunkSize;\n        currentChunk++;\n        if (uploadedFileNum.indexOf(currentChunk) < 0) {\n          // 后台没有当前chunk\n          let formData = new FormData();\n          let fileBlob = currentFile.slice(start, end);\n          formData.append("file", fileBlob);\n          try {\n            // 上传\n            let data = await vm.uploadChunk({\n              fileMd5: md5,\n              chunk: currentChunk,\n              file: formData\n            });\n            if (data) {\n              // currentChunk++;\n              vm.uploadCount++;\n              vm.getUploadedFileInfo(chunks, md5);\n            }\n            if (currentChunk < chunks) {\n              loadNext();\n            }\n          } catch (error) {\n            vm.showTableSpin = false;\n          }\n        } else {\n          loadNext();\n        }\n      }\n      loadNext();\n    },\n    // 并发上传完成后通知服务器合并文件\n    async getUploadedFileInfo(chunks, md5) {\n      if (this.uploadCount === chunks) {\n        // 检查文件是否上传完毕\n        try {\n          let uploadedFileNum = await this.checkUploadChunk({ fileMd5: md5 });\n          if (uploadedFileNum) {\n            if (uploadedFileNum.length === chunks) {\n              // 告诉后台合并文件\n              let data = await this.mergeFileChunk({\n                fileMd5: md5,\n                fileName: this.file.name,\n                countChunks: chunks\n              });\n              if (data) {\n                // merge 完文件，通过文件 path 请求解析文件信息，显示在界面上\n                this.handleZipInfoAfterMergeAction({\n                  fileName: this.file.name,\n                  fileMd5: md5\n                });\n              }\n            } else {\n              // 上传存在错漏,重新上传错漏部分\n              this.uploadFileBySplitToggle(md5, uploadedFileNum);\n            }\n          }\n        } catch (error) {\n          this.showTableSpin = false;\n        }\n      }\n    },\n')])])]),a("h4",{attrs:{id:"上传审查依据（uploadfile）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上传审查依据（uploadfile）"}},[t._v("#")]),t._v(" 上传审查依据（UploadFile）")]),t._v(" "),a("p",[t._v("工作依据的文件格式需先部署好全文检索")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' <Upload\n            class="upload-basic-header-content-upload"\n            multiple\n            :before-upload="handleUpload"\n            :on-success="handleSuccess"\n            :show-upload-list="false"\n            type="drag"\n            :action="uploadUrl"\n          >\n\nuploadUrl: BASEURL + "rest/reviewTask/private/v1/temp/workBasis", // 上传文件的地址\n')])])]),a("h4",{attrs:{id:"审查任务管理（resultreviewmain）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#审查任务管理（resultreviewmain）"}},[t._v("#")]),t._v(" 审查任务管理（ResultReviewMain）")]),t._v(" "),a("p",[t._v("支持审查任务启动机器审查、人工审查、任务删除等操作")]),t._v(" "),a("p",[t._v("点击【启动机器审查】按钮，启动机器审查计算，此时审查任务状态更新为“机审计算中”。待模型计算完成后，审查任务状态由“待审查”变为“审查中”。")]),t._v(" "),a("p",[t._v("待模型计算结束，操作更新为【人工审查】，鼠标移入【机器审查中】或【人工审查】，可查看模型运行状态。绿色代表模型计算成功，红色代表模型计算失败。鼠标点击某一条计算失败的审查要点，也可以点击批量重启按钮，重启模型计算。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/zt.png"),alt:"foo"}}),t._v(" "),a("h4",{attrs:{id:"审查报告查看（resultexamine-rootcontent）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#审查报告查看（resultexamine-rootcontent）"}},[t._v("#")]),t._v(" 审查报告查看（ResultExamine/RootContent）")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/scbg.png"),alt:"foo"}}),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("界面位置/名称")]),t._v(" "),a("th",[t._v("路由名称")]),t._v(" "),a("th",[t._v("裱框颜色")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("左侧一级导航")]),t._v(" "),a("td",[t._v("NrMainTitle")]),t._v(" "),a("td",[t._v("红色")])]),t._v(" "),a("tr",[a("td",[t._v("左侧二级导航头部")]),t._v(" "),a("td",[t._v("NrDarkTitleLabel")]),t._v(" "),a("td",[t._v("黄色")])]),t._v(" "),a("tr",[a("td",[t._v("左侧二级导航")]),t._v(" "),a("td",[t._v("NrDarkAndMenuItemClick")]),t._v(" "),a("td",[t._v("绿色")])]),t._v(" "),a("tr",[a("td",[t._v("报告")]),t._v(" "),a("td",[t._v("ReviewOpinionContent")]),t._v(" "),a("td",[t._v("蓝色")])]),t._v(" "),a("tr",[a("td",[t._v("审查意见")]),t._v(" "),a("td",[t._v("NrReportLightMenu")]),t._v(" "),a("td",[t._v("绿色")])]),t._v(" "),a("tr",[a("td",[t._v("地图")]),t._v(" "),a("td",[t._v("SpatialMap")]),t._v(" "),a("td",[t._v("黑色")])]),t._v(" "),a("tr",[a("td",[t._v("图表审查")]),t._v(" "),a("td",[t._v("UnknownColumns")]),t._v(" "),a("td",[t._v("黑色")])]),t._v(" "),a("tr",[a("td",[t._v("右侧规划成果/审查依据 tab 按钮")]),t._v(" "),a("td",[t._v("NrVerticalTab")]),t._v(" "),a("td",[t._v("红色")])]),t._v(" "),a("tr",[a("td",[t._v("规划成果/审查依据内容")]),t._v(" "),a("td",[t._v("NrLightMenu")]),t._v(" "),a("td",[t._v("红色")])])])]),t._v(" "),a("h5",{attrs:{id:"审查要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#审查要点"}},[t._v("#")]),t._v(" 审查要点")]),t._v(" "),a("p",[t._v("主要分为机器审查和人工审查，表现形式为地图和图表。"),a("br"),t._v("\n主要数据来源：\n"),a("img",{attrs:{src:t.$withBase("/sjly.png"),alt:"foo"}})]),t._v(" "),a("p",[a("strong",[t._v("规划成果(getPlanningResultOrReportBasicUrl)")]),a("br"),t._v("\n查看审查任务对应上报规划成果，包括规划文本、规划图纸、规划表格及相关说明文件。支持文件（word、excel、pdf、jpg 等格式）以及矢量数据（gdb）、表格数据（mdb）的预览查看；支持对按文件标题进行快速搜索。")]),t._v(" "),a("h3",{attrs:{id:"_3、成果管理（resultmanager）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、成果管理（resultmanager）"}},[t._v("#")]),t._v(" 3、成果管理（ResultManager）")]),t._v(" "),a("p",[t._v("查看每一个空间规划成果审查任务中提交的成果图纸、审查报告、修改意见、后期的成果批复，包括报批成果、批复文件")]),t._v(" "),a("h4",{attrs:{id:"组件部分-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件部分-2"}},[t._v("#")]),t._v(" 组件部分")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/cggl.png"),alt:"foo"}}),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("界面位置/名称")]),t._v(" "),a("th",[t._v("路由名称")]),t._v(" "),a("th",[t._v("裱框颜色")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("左侧一级导航")]),t._v(" "),a("td",[t._v("VerticalNav")]),t._v(" "),a("td",[t._v("红色")])]),t._v(" "),a("tr",[a("td",[t._v("左侧二级导航")]),t._v(" "),a("td",[t._v("ResultManageMenu")]),t._v(" "),a("td",[t._v("黄色")])]),t._v(" "),a("tr",[a("td",[t._v("左侧二级导航内容")]),t._v(" "),a("td",[t._v("NrLightMenuManager")]),t._v(" "),a("td",[t._v("黄色")])]),t._v(" "),a("tr",[a("td",[t._v("图表内容")]),t._v(" "),a("td",[t._v("ResultTreeTable")]),t._v(" "),a("td",[t._v("绿色")])]),t._v(" "),a("tr",[a("td",[t._v("上传成果")]),t._v(" "),a("td",[t._v("ResultCatalog")]),t._v(" "),a("td",[t._v("蓝色")])])])]),t._v(" "),a("h3",{attrs:{id:"_4、进度查询（schedulequery）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、进度查询（schedulequery）"}},[t._v("#")]),t._v(" 4、进度查询（ScheduleQuery）")]),t._v(" "),a("p",[t._v("支持查看全域国土空间规划编制项目的审批进度状态，可通过审查进度一张图和审查进度一揽表来查看不同层级总体规划的进度。并支持将进度情况导出到 excel。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/jd.png"),alt:"foo"}}),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("界面位置/名称")]),t._v(" "),a("th",[t._v("路由名称")]),t._v(" "),a("th",[t._v("裱框颜色")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("左侧一级导航")]),t._v(" "),a("td",[t._v("VerticalNav")]),t._v(" "),a("td",[t._v("红色")])]),t._v(" "),a("tr",[a("td",[t._v("图表")]),t._v(" "),a("td",[t._v("ScheduleQueryPanel")]),t._v(" "),a("td",[t._v("黄色")])]),t._v(" "),a("tr",[a("td",[t._v("主体图表")]),t._v(" "),a("td",[t._v("ScheduleTable")]),t._v(" "),a("td",[t._v("绿色")])]),t._v(" "),a("tr",[a("td",[t._v("行政区划选择")]),t._v(" "),a("td",[t._v("TreeSelector")]),t._v(" "),a("td",[t._v("绿色")])]),t._v(" "),a("tr",[a("td",[t._v("地图")]),t._v(" "),a("td",[t._v("eyemap-map")]),t._v(" "),a("td",[t._v("绿色")])])])]),t._v(" "),a("h3",{attrs:{id:"_5、要点配置-configuratepoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、要点配置-configuratepoint"}},[t._v("#")]),t._v(" 5、要点配置(ConfiguratePoint)")]),t._v(" "),a("p",[t._v("分级分类进行审查要点配置，审查要点的内容按“四类四级”来划分，四类为【总体规划】、【专项规划】、【控制性详细规划】、【村庄规划】；四级分别为【省级】、【市级】、【县级】、【乡镇级】")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/ydsc.png"),alt:"foo"}}),t._v(" "),a("p",[t._v("三级审查要点按审查类型分为【机审】、【人工】，其中【机审】又分为发布服务和不发布服务（图数一致性与指标符合性）。机器审查的配置如下：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/mxpz.png"),alt:"foo"}})])}),[],!1,null,null,null);e.default=r.exports}}]);