(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{73:function(e,t,v){"use strict";v.r(t);var r=v(0),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"vue知识点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue知识点"}},[e._v("#")]),e._v(" VUE知识点")]),e._v(" "),v("h2",{attrs:{id:"_1、vue响应式原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、vue响应式原理"}},[e._v("#")]),e._v(" 1、vue响应式原理")]),e._v(" "),v("h4",{attrs:{id:"vue2-x版本中主要使用的是object-defineproperty"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue2-x版本中主要使用的是object-defineproperty"}},[e._v("#")]),e._v(" vue2.X版本中主要使用的是Object.defineProperty")]),e._v(" "),v("p",[e._v("Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n在Object中指的是构造器对象")]),e._v(" "),v("h4",{attrs:{id:"在vue中典型的使用场景："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在vue中典型的使用场景："}},[e._v("#")]),e._v(" 在vue中典型的使用场景：")]),e._v(" "),v("p",[e._v("新增或修改")]),e._v(" "),v("blockquote",[v("p",[e._v("Vue.set( target, key, value );"),v("br"),e._v("\n或者this.$set( target, key, value)"),v("br"),e._v("\ntarget：要更改的数据源(可以是对象或者数组)"),v("br"),e._v("\nkey：要更改的具体数据"),v("br"),e._v("\nvalue ：重新赋的值"),v("br"),e._v("\n返回值：设置的值。")])]),e._v(" "),v("p",[e._v("删除")]),e._v(" "),v("blockquote",[v("p",[e._v("Vue.delete( target, key, value );"),v("br"),e._v("\n或者this.$delete( target, key, value)")])]),e._v(" "),v("h4",{attrs:{id:"在vue中的使用原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在vue中的使用原理"}},[e._v("#")]),e._v(" 在vue中的使用原理")]),e._v(" "),v("p",[e._v("vue数据初始化时Object.defineProperty重新定义data中的所有属性，当页面使用属性的时候，进行页面属性依赖收集（收集在当前组件的watcher中），如果属性发生改变在通知相关依赖进行数据更新。在使用的这个过程中使用的订阅发布模式。Observer 作为发布者，Watcher 作为订阅者。")]),e._v(" "),v("h2",{attrs:{id:"_2、写-react-vue-项目时为什么要在列表组件中写-key，其作用是什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、写-react-vue-项目时为什么要在列表组件中写-key，其作用是什么？"}},[e._v("#")]),e._v(" 2、写 React / Vue 项目时为什么要在列表组件中写 key，其作用是什么？")]),e._v(" "),v("p",[v("strong",[e._v("解答")]),e._v("：key值是每一个vnode的唯一id，作用是提高diff算法虚拟节点对比的准确性、快捷性；")]),e._v(" "),v("p",[e._v("（在实际项目中key值是用于判读组件更新时两个vnode是否相同，相同则复用，不相同则删除旧的，创建新的。）")]),e._v(" "),v("p",[v("strong",[e._v("准确性")])]),e._v(" "),v("p",[e._v("根据key值产生vnode的唯一id，再根据id进行“===”判读是否更新当前vnode；")]),e._v(" "),v("p",[v("strong",[e._v("快捷性")])]),e._v(" "),v("p",[e._v("只存在于有更新的情况下，利用key值的唯一性生成map对象来获取对应的节点信息，相对遍历方式更加的快捷；")]),e._v(" "),v("blockquote",[v("p",[e._v("key值在对修改节点执行diff算法时，性能确实有所提升"),v("br"),e._v("\nkey值在对新增节点执行diff算法时，带key值新增是找不到可复用的vnode，所以新增时需要创建一个新的vnode和销毁之前的vnode,在DOM中也需要操作移除和添加，进一步的增大了性能开销。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);