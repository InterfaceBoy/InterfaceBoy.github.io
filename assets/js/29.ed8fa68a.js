(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{76:function(e,t,_){"use strict";_.r(t);var r=_(0),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"gitlab流程说明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#gitlab流程说明"}},[e._v("#")]),e._v(" GitLab流程说明")]),e._v(" "),_("h2",{attrs:{id:"_1、fork-项目"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、fork-项目"}},[e._v("#")]),e._v(" 1、fork 项目")]),e._v(" "),_("h3",{attrs:{id:"_1-1-fork项目"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-fork项目"}},[e._v("#")]),e._v(" 1.1 fork项目")]),e._v(" "),_("p",[e._v("在"),_("strong",[e._v("产品")]),e._v("上进行fork操作，命名空间（namespace）选择"),_("strong",[e._v("新项目放置的空间")])]),e._v(" "),_("h3",{attrs:{id:"_1-2-修改项目信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-修改项目信息"}},[e._v("#")]),e._v(" 1.2 修改项目信息")]),e._v(" "),_("p",[e._v("fork完成后，进入新fork完成后的项目，在"),_("code",[e._v("Settings -> General")]),e._v("中分别修改")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("General project")]),e._v(" 中的"),_("code",[e._v("Project name")]),e._v("为新名称")]),e._v(" "),_("li",[_("code",[e._v("Advanced")]),e._v("中的"),_("code",[e._v("Rename repository")]),e._v("中的path为新地址")])]),e._v(" "),_("h2",{attrs:{id:"_2、clone项目分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、clone项目分支"}},[e._v("#")]),e._v(" 2、clone项目分支")]),e._v(" "),_("h3",{attrs:{id:"_2-1-clone版本分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-clone版本分支"}},[e._v("#")]),e._v(" 2.1 clone版本分支")]),e._v(" "),_("p",[_("code",[e._v("git clone -b <版本分支名 eg:0925> <项目远程仓库>")])]),e._v(" "),_("h3",{attrs:{id:"_2-2-修改版本分支名称"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-修改版本分支名称"}},[e._v("#")]),e._v(" 2.2 修改版本分支名称")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("本地分支名称修改："),_("code",[e._v("git branch -m <版本分支名 eg:0925> dev")])])]),e._v(" "),_("li",[_("p",[e._v("删除远程版本分支："),_("code",[e._v("git push --delete origin <版本分支名 eg:0925>")])])]),e._v(" "),_("li",[_("p",[e._v("上传新命名的本地分支："),_("code",[e._v("git push origin dev")])])]),e._v(" "),_("li",[_("p",[e._v("把修改后的本地分支与远程分支关联： "),_("code",[e._v("git branch --set-upstream-to origin/dev")])])])]),e._v(" "),_("p",[e._v("这样项目仓库就从主库迁出了一个自己的分支作为开发分支")]),e._v(" "),_("blockquote",[_("p",[e._v("注：这里的目的是把产品上面的版本分支作为项目的开发分支在项目上进行开发，为了规范需要修改掉分支名称，分支名称可以自定义，前提是当前没有同名分支存在")])]),e._v(" "),_("h2",{attrs:{id:"_3、修改master分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、修改master分支"}},[e._v("#")]),e._v(" 3、修改master分支")]),e._v(" "),_("h3",{attrs:{id:"_3-1-本地由dev分支切出master分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-本地由dev分支切出master分支"}},[e._v("#")]),e._v(" 3.1 本地由dev分支切出"),_("code",[e._v("master")]),e._v("分支")]),e._v(" "),_("ul",[_("li",[e._v("本地"),_("code",[e._v("dev")]),e._v("分支下："),_("code",[e._v("git checkout -b master")])])]),e._v(" "),_("h3",{attrs:{id:"_3-2-删除原master分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-删除原master分支"}},[e._v("#")]),e._v(" 3.2 删除原"),_("code",[e._v("master")]),e._v("分支")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("在"),_("code",[e._v("Settings -> Repository->Proteced Branches")]),e._v("中把master分支设置为“Unprotect“")])]),e._v(" "),_("li",[_("p",[e._v("在"),_("code",[e._v("Settings -> General -> General project-> Default Branch")]),e._v("中将默认分支修改为 "),_("code",[e._v("dev")]),e._v("，保存。")])]),e._v(" "),_("li",[_("p",[e._v("在"),_("code",[e._v("Repository->Branches")]),e._v("中删除"),_("code",[e._v("master")]),e._v("分支")])])]),e._v(" "),_("h3",{attrs:{id:"_3-3-新建远程master分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-新建远程master分支"}},[e._v("#")]),e._v(" 3.3 新建远程"),_("code",[e._v("master")]),e._v("分支")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("上传3.1创建的本地master分支："),_("code",[e._v("git push origin master")])])]),e._v(" "),_("li",[_("p",[e._v("把修改后的本地分支与远程分支关联： "),_("code",[e._v("git branch --set-upstream-to origin/master")])])])]),e._v(" "),_("h3",{attrs:{id:"_3-4-将master分支设置为默认分支和受保护分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-将master分支设置为默认分支和受保护分支"}},[e._v("#")]),e._v(" 3.4 将"),_("code",[e._v("master")]),e._v("分支设置为默认分支和受保护分支")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("在"),_("code",[e._v("Settings -> General -> General project-> Default Branch")]),e._v("中将默认分支修改为 "),_("code",[e._v("master")]),e._v("，保存。")])]),e._v(" "),_("li",[_("p",[e._v("在"),_("code",[e._v("Settings -> Repository->Proteced Branches")]),e._v("中把"),_("code",[e._v("develop")]),e._v("分支设置为“Unprotect“,并设置"),_("code",[e._v("master")]),e._v("为"),_("code",[e._v("Protect")])])])]),e._v(" "),_("h2",{attrs:{id:"_4、同步源仓库更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、同步源仓库更新"}},[e._v("#")]),e._v(" 4、同步源仓库更新")]),e._v(" "),_("h3",{attrs:{id:"_4-1-查看远程状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-查看远程状态"}},[e._v("#")]),e._v(" 4.1 查看远程状态")]),e._v(" "),_("p",[_("code",[e._v("git remote -v")])]),e._v(" "),_("p",[e._v("如果没有添加过上游源仓库那么这里应该只有当前项目远程信息")]),e._v(" "),_("h3",{attrs:{id:"_4-2-添加远程上游源仓库即产品仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-添加远程上游源仓库即产品仓库"}},[e._v("#")]),e._v(" 4.2 添加远程上游源仓库即产品仓库")]),e._v(" "),_("p",[_("code",[e._v("git remote add upstream <产品仓库>")])]),e._v(" "),_("h3",{attrs:{id:"_4-3-再次查看远程状态，确认是否添加成功"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-再次查看远程状态，确认是否添加成功"}},[e._v("#")]),e._v(" 4.3 再次查看远程状态，确认是否添加成功")]),e._v(" "),_("p",[_("code",[e._v("git remote -v")])]),e._v(" "),_("p",[e._v("这个时候应该有两条远程信息")]),e._v(" "),_("h3",{attrs:{id:"_4-4-同步上游分支代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-同步上游分支代码"}},[e._v("#")]),e._v(" 4.4 同步上游分支代码")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("fetch")]),e._v(" 上游源库分支： "),_("code",[e._v("git fetch upstream <上游分支名称>")])]),e._v(" "),_("li",[e._v("拉取上游源库分支代码： "),_("code",[e._v("git pull upstream <上游分支名称>")])]),e._v(" "),_("li",[e._v("切换本地相应分支："),_("code",[e._v("git checkout dev")])]),e._v(" "),_("li",[e._v("合并本地分支与上游源库分支："),_("code",[e._v("git merge --no-ff upstream/<上游分支名称>")])])]),e._v(" "),_("h3",{attrs:{id:"_4-5-更新项目仓库远程分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-更新项目仓库远程分支"}},[e._v("#")]),e._v(" 4.5 更新项目仓库远程分支")]),e._v(" "),_("p",[_("code",[e._v("git push origin dev")])]),e._v(" "),_("h2",{attrs:{id:"_5、更新上游源库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、更新上游源库"}},[e._v("#")]),e._v(" 5、更新上游源库")]),e._v(" "),_("h3",{attrs:{id:"_5-1-由上游迭代分支切出新本地分支repeater"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-由上游迭代分支切出新本地分支repeater"}},[e._v("#")]),e._v(" 5.1 由上游迭代分支切出新本地分支repeater")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("fetch")]),e._v("上游源库迭代分支："),_("code",[e._v("git fetch upstream dev:repeater")])])]),e._v(" "),_("li",[_("p",[e._v("切换到本地分支  "),_("code",[e._v("git checkout repeater")])])])]),e._v(" "),_("h3",{attrs:{id:"_5-2-上传repeater到远程分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-上传repeater到远程分支"}},[e._v("#")]),e._v(" 5.2 上传"),_("code",[e._v("repeater")]),e._v("到远程分支")]),e._v(" "),_("ul",[_("li",[e._v("在本地分支"),_("code",[e._v("repeater")]),e._v("进行修改，将项目成果集成到"),_("code",[e._v("repeater")]),e._v("中")]),e._v(" "),_("li",[e._v("拉取上游源库迭代分支更新：\n"),_("ul",[_("li",[_("code",[e._v("git fetch upstream dev")])]),e._v(" "),_("li",[_("code",[e._v("git merge upstream/dev")])])])]),e._v(" "),_("li",[e._v("测试通过后上传远程分支："),_("code",[e._v("git push origin repeater")])])]),e._v(" "),_("h3",{attrs:{id:"_5-3-向上游源库提交merge-request"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-向上游源库提交merge-request"}},[e._v("#")]),e._v(" 5.3 向上游源库提交"),_("code",[e._v("merge request")])]),e._v(" "),_("ul",[_("li",[e._v("基于"),_("code",[e._v("repeater")]),e._v("分支创建"),_("code",[e._v("merge request")])]),e._v(" "),_("li",[_("code",[e._v("Target branch")]),e._v("选择上游源库中的迭代分支")])]),e._v(" "),_("p",[e._v("至此项目从产品fork源码并从源库更新并向源库提交更新的整个流程就完成了。")]),e._v(" "),_("h2",{attrs:{id:"_6、产品开发验证项目提交成果"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、产品开发验证项目提交成果"}},[e._v("#")]),e._v(" 6、产品开发验证项目提交成果")]),e._v(" "),_("h3",{attrs:{id:"_6-1-切出项目请求分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-切出项目请求分支"}},[e._v("#")]),e._v(" 6.1 切出项目请求分支")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("拉取请求分支："),_("code",[e._v("git fetch <项目库地址> <项目库请求分支 eg:repeater>")])])]),e._v(" "),_("li",[_("p",[e._v("基于请求分支切出本地分支: "),_("code",[e._v("git checkout -b <项目仓库名>-repeater FETCH_HEAD")])])])]),e._v(" "),_("h3",{attrs:{id:"_6-2-本地运行检查更新内容"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-本地运行检查更新内容"}},[e._v("#")]),e._v(" 6.2 本地运行检查更新内容")]),e._v(" "),_("h3",{attrs:{id:"_6-3-本地合并请求分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-本地合并请求分支"}},[e._v("#")]),e._v(" 6.3 本地合并请求分支")]),e._v(" "),_("p",[e._v("合并请求分支如果有冲突解决冲突")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("git checkout <目标分支eg:dev>")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("git merge --no-ff <项目仓库名>-repeater")])])])]),e._v(" "),_("h3",{attrs:{id:"_6-4-提交合并到远程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-提交合并到远程"}},[e._v("#")]),e._v(" 6.4 提交合并到远程")]),e._v(" "),_("p",[e._v("将合并好的更新内容提交到远程仓库")]),e._v(" "),_("p",[_("code",[e._v("git push origin <目标分支eg:dev>")])]),e._v(" "),_("p",[e._v("提交完成后整就自动完成了对项目提交的请求内容的"),_("code",[e._v("Merge")]),e._v("操作")])])}),[],!1,null,null,null);t.default=a.exports}}]);